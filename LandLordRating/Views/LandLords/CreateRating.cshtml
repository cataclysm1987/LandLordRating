@model LandLordRating.Models.Rating

@{
    ViewBag.Title = "Create Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Leaving Review For @ViewBag.Message</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(u => u.LandLordId)
        <div class="form-group">
            @Html.LabelFor(model => model.RatingName, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EditorFor(model => model.RatingName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RatingName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VoucherUser, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.VoucherUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VoucherUser, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FireExtinguisher, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.FireExtinguisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FireExtinguisher, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SmokeDetectors, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.SmokeDetectors, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SmokeDetectors, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarbonMonoxcide, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.CarbonMonoxcide, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarbonMonoxcide, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LateFees, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.LateFees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LateFees, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LandLordNotice, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.LandLordNotice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LandLordNotice, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LandLordResponse, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.LandLordResponse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LandLordResponse, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecommendLandLord, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.RecommendLandLord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecommendLandLord, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecommendLandLord, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.RentIncrease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RentIncrease, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WrittenLease, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.WrittenLease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WrittenLease, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Eviction, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.Eviction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Eviction, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndLease, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.EndLease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndLease, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimesHaveMoved, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EditorFor(model => model.TimesHaveMoved, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @max = "10" } })
                @Html.ValidationMessageFor(model => model.TimesHaveMoved, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RateAnonymously, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.RateAnonymously, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RateAnonymously, "", new { @class = "text-danger" })
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.LandLordRating, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EditorFor(model => model.LandLordRating, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @max = "10" } })
                @Html.ValidationMessageFor(model => model.LandLordRating, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalComments, htmlAttributes: new { @class = "control-label" })<br />
                @Html.TextAreaFor(model => model.AdditionalComments, new { htmlAttributes = new { @class = "form-control", rows="6"} })
                @Html.ValidationMessageFor(model => model.AdditionalComments, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

   
   
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
