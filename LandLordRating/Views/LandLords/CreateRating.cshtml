@model LandLordRating.Models.Rating

@{
    ViewBag.Title = "Create Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Leaving Review For @ViewBag.Message</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(u => u.LandLordId)
        <div class="form-group">
            @Html.LabelFor(model => model.RatingName, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EditorFor(model => model.RatingName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RatingName, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VoucherUser, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.VoucherUser, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VoucherUser, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FireExtinguisher, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.FireExtinguisher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FireExtinguisher, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SmokeDetectors, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.SmokeDetectors, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SmokeDetectors, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CarbonMonoxcide, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.CarbonMonoxcide, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CarbonMonoxcide, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LateFees, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.LateFees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LateFees, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LandLordNotice, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.LandLordNotice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LandLordNotice, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LandLordResponse, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.LandLordResponse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LandLordResponse, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecommendLandLord, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.RecommendLandLord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecommendLandLord, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecommendLandLord, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.RentIncrease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RentIncrease, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WrittenLease, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.WrittenLease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WrittenLease, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Eviction, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.Eviction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Eviction, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndLease, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.EndLease, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndLease, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimesHaveMoved, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EditorFor(model => model.TimesHaveMoved, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @max = "10" } })
                @Html.ValidationMessageFor(model => model.TimesHaveMoved, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RateAnonymously, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EnumDropDownListFor(model => model.RateAnonymously, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RateAnonymously, "", new { @class = "text-danger" })
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.LandLordRating, htmlAttributes: new { @class = "control-label" })<br />
                @Html.EditorFor(model => model.LandLordRating, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @max = "10" } })
                @Html.ValidationMessageFor(model => model.LandLordRating, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalComments, htmlAttributes: new { @class = "control-label" })<br />
                @Html.TextAreaFor(model => model.AdditionalComments, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.AdditionalComments, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    <button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#wallFloorCeilingModal">
        Launch demo modal
    </button>
    <!-- Kitchen Modal -->
    <div class="modal fade" id="kitchenModal" tabindex="-1" role="dialog" aria-labelledby="kitchenModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="kitchenModalLabel">Kitchen Considerations</h4>
                </div>
                <div class="modal-body">
                    <h4>Oven and Stove</h4>
                    <p>
                        Both an oven and a stove (or range) with top burners must be present and working. If either is missing and you know that the owner is responsible for supplying these appliances please note that they failed to supply them.<br /><br />
                        An oven is not working if it will not heat up. To be working a stove or range must have all burners working and knobs to turn them off and on.
                        A microwave oven may be substituted for an owner-supplied oven and stove (or range) if the tenant agrees and microwave ovens are furnished instead of ovens and stoves (or ranges).
                    </p>
                    <h4>Refrigerator</h4>
                    <p>
                        A refrigerator is not working if it will not maintain a temperature low enough to keep food from spoiling over a reasonable period of time.  If a refrigerator is not supplied or is not working please note that they failed to supply a one.
                    </p>
                    <h4>Kitchen Sink</h4>
                    <p>
                        If a permanently attached kitchen sink is not present in the kitchen or kitchen area, please note that the owner failed to provide an appropriate sink.<br /><br />
                        A sink in a bathroom or a por table basin will not satisfy this requirement. A sink is not working unless it has running hot and cold water from the faucets and a properly connected and properly working drain (with a “gas trap”).
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Bathroom Modal -->
    <div class="modal fade" id="bathroomModal" tabindex="-1" role="dialog" aria-labelledby="bathroomModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="bathroomModalLabel">Bathroom Considerations</h4>
                </div>
                <div class="modal-body">
                    <h4>Bathroom Present</h4>
                    <p>
                        Most units have easily identifiable bathrooms (i.e., a separate room with toilet, washbasin and tub or shower). In some cases, however, you will encounter units with scattered bathroom facilities (i.e., toilet. washbasin
                        and tub or shower located in separate parts of the unit). At a minimum,
                        there must be an enclosure around the toilet.
                    </p>
                    <h4>Fixed Wash Basin or Lavatory in Unit</h4>
                    <p>
                        The wash basin must be permanently installed (i.e., a portable
                        wash basin does not satisfy the requirement). Also, a kitchen sink
                        used to pass the kitchen requirements cannot also serve as the bathroom wash basin. The wash
                        basin may be located separate from the other bathroom facilities
                        (e.g., in a hallway).<br /><br />
                        Not working means: the wash basin is not connected to a system
                        that will deliver hot and cold running water; it is not connected to a
                        properly operating drain; the connectors ( or vents or traps) are
                        faulty to the extent that severe leakage of water or escape of sewer
                        gases occurs.
                    </p>
                    <h4>Tub or Shower in Unit</h4>
                    <p>
                        Not present means that neither a tub nor shower is present in the
                        unit. Again, these facilities need not be in the same room with the
                        rest of the bathroom facilities. They must, however, be private.
                        Not working covers the same requirements detailed above for wash
                        basin.
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Walls Ceilings and FLoors Modal -->
    <div class="modal fade" id="wallFloorCeilingModal" tabindex="-1" role="dialog" aria-labelledby="wallFloorCeilingModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="wallFloorCeilingModalLabel">Walls, Floors, and Ceilings Considerations</h4>
                </div>
                <div class="modal-body">
                    <h4>Ceiling Condition</h4>
                    <p>
                        "Unsound or hazardous” means the presence of such serious defects
                        that either a potential exists for structural collapse or that large
                        cracks or holes allow significant drafts to enter the unit. The
                        condition includes: severe bulging or buckling; large holes; missing
                        parts; falling or in da nger of falling loose surface materials ( other
                        than paper or paint).
                    </p>
                    <h4>Wall Condition</h4>
                    <p>
                        “Unsound or hazardous” includes: serious de fects such that t he
                        structural safety of the building is threatened, such as severe
                        buckling, bulging or leaning; damaged or loose structural members;
                        large holes; air infiltration.
                    </p>
                    <h4>Floor Condition</h4>
                    <p>
                        “Unsound or hazardous” means the presence of such serious defects
                        that a potential exists for structural collapse or other threats to safety
                        (e.g., st ripping) or large cracks or holes al low substantial drafts from
                        below the floor. The condition includes: severe buckling or major
                        movements under walking stress; damaged or missing parts.
                    </p>
                </div>
            </div>
        </div>
    </div>

    <!-- Other Information Modal -->
    <div class="modal fade" id="otherModal" tabindex="-1" role="dialog" aria-labelledby="otherModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="otherModalLabel">Walls, Floors, and Ceilings Considerations</h4>
                </div>
                <div class="modal-body">
                    <h4>Window Condition</h4>
                    <p>
                        Any room used for sleeping must have at least one window. If
                        the windows in sleeping rooms are designed to be opened, at
                        least one window must be operable. The minimum standards
                        do not require a window in other rooms.
                    </p>
                    <h4>Smoke Detectors</h4>
                    <p>
                        At least one battery-operated or hard-wired smoke detector
                        must be present and working on each level of the unit,
                        including the basement, but not the crawl spaces and
                        unfinished attic.<br /><br />
                        Smoke detectors must be installed in accordance with and m eet
                        the requirements of the National Fire Protection Association
                        Standard (NFPA) 74 (or its successor standards)<br /><br />
                        If the dwelling unit is occupied by any hearing-impaired person,
                        smoke detectors must have an alarm system designed
                        for hearing-impaired per sons as specified in NFPA 74 ( or
                        successor standards)
                    </p>
                    <h4>Security</h4>
                    <p>
                        Are all windows and doors that are accessible from
                        the outside lockable?
                    </p>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
